name: Production Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  TF_VAR_environment: prod
  WORKING_DIR: environments/prod

jobs:
  validate:
    name: Security Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install security tools
      run: |
        curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
        pip install checkov
        wget -q https://github.com/zricethezav/gitleaks/releases/latest/download/gitleaks_8.18.0_linux_x64.tar.gz
        tar -xzf gitleaks_8.18.0_linux_x64.tar.gz
        sudo mv gitleaks /usr/local/bin/

    - name: Comprehensive security scan
      run: |
        echo "🔍 Running comprehensive security scans..."
        gitleaks detect --source . --verbose
        terraform fmt -check -recursive

    - name: Terraform validation
      run: |
        terraform init
        terraform validate
        terraform plan -detailed-exitcode -out=tfplan
      working-directory: ${{ env.WORKING_DIR }}

    - name: Advanced security analysis
      run: |
        tfsec ${{ env.WORKING_DIR }} --format json --out tfsec-prod.json || true
        checkov -d ${{ env.WORKING_DIR }} --framework terraform --output json --output-file checkov-prod.json || true

    - name: Policy validation
      run: |
        echo "✅ All security checks passed for production deployment"

    - name: Upload production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: prod-security-validation
        path: |
          tfsec-prod.json
          checkov-prod.json
          ${{ env.WORKING_DIR }}/tfplan

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Download validated plan
      uses: actions/download-artifact@v3
      with:
        name: prod-security-validation
        path: ${{ env.WORKING_DIR }}

    - name: Production deployment
      run: |
        echo "🚀 Deploying to production environment..."
        terraform init
        terraform apply -auto-approve tfplan
        echo "✅ Production deployment completed successfully"
      working-directory: ${{ env.WORKING_DIR }}

    - name: Post-deployment validation
      run: |
        echo "🔍 Running post-deployment checks..."
        terraform output -json > deployment-outputs.json

    - name: Generate production report
      run: |
        echo "# Production Deployment Report" > prod-deployment-report.md
        echo "## Deployment Details" >> prod-deployment-report.md
        echo "- Timestamp: $(date)" >> prod-deployment-report.md
        echo "- Commit SHA: ${{ github.sha }}" >> prod-deployment-report.md
        echo "- Triggered by: ${{ github.actor }}" >> prod-deployment-report.md
        echo "- Environment: Production" >> prod-deployment-report.md

    - name: Upload production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: production-deployment-artifacts
        path: |
          prod-deployment-report.md
          ${{ env.WORKING_DIR }}/deployment-outputs.json
