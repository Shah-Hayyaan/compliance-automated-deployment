name: UAT Environment Deploy

on:
  push:
    branches: [ uat ]
  workflow_dispatch:

env:
  TF_VAR_environment: uat
  WORKING_DIR: environments/uat

jobs:
  validate:
    name: Validate and Plan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install security tools
      run: |
        curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
        pip install checkov
        wget -q https://github.com/zricethezav/gitleaks/releases/latest/download/gitleaks_8.18.0_linux_x64.tar.gz
        tar -xzf gitleaks_8.18.0_linux_x64.tar.gz
        sudo mv gitleaks /usr/local/bin/

    - name: Security scans
      run: |
        gitleaks detect --source . --verbose
        terraform fmt -check -recursive

    - name: Terraform workflow
      run: |
        terraform init
        terraform validate
        terraform plan -out=tfplan
      working-directory: ${{ env.WORKING_DIR }}

    - name: Security analysis
      run: |
        tfsec ${{ env.WORKING_DIR }} --format json --out tfsec-uat.json || true
        checkov -d ${{ env.WORKING_DIR }} --framework terraform --output json --output-file checkov-uat.json || true

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: uat-validation-results
        path: |
          tfsec-uat.json
          checkov-uat.json
          ${{ env.WORKING_DIR }}/tfplan

  deploy:
    name: Deploy to UAT
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/uat'
    environment: uat

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: uat-validation-results
        path: ${{ env.WORKING_DIR }}

    - name: Deploy infrastructure
      run: |
        terraform init
        terraform apply -auto-approve tfplan
      working-directory: ${{ env.WORKING_DIR }}

    - name: Generate UAT report
      run: |
        echo "# UAT Deployment Report" > uat-deployment-report.md
        echo "## Timestamp: $(date)" >> uat-deployment-report.md
        echo "## Commit: ${{ github.sha }}" >> uat-deployment-report.md
        terraform show -json > uat-terraform-state.json

    - name: Upload UAT artifacts
      uses: actions/upload-artifact@v3
      with:
        name: uat-deployment-artifacts
        path: |
          uat-deployment-report.md
          ${{ env.WORKING_DIR }}/uat-terraform-state.json
